{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Pweet.js","components/PweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","icon","faTwitter","color","size","style","marginLeft","type","placeholder","required","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onClick","faGoogle","faGithub","Pweet","pweetObj","isOwner","editing","setEditing","text","newPweet","setNewPweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","update","src","currentUser","photoURL","creatorId","width","height","htmlFor","faTrashAlt","faEdit","PweetFactory","userObj","pweet","setPweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","collection","add","maxLength","faImage","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","pweets","setPweets","useEffect","onSnapshot","snapshot","pweetArray","docs","map","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","Navigation","to","faHome","faUser","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a55fd714.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./AuthForm.css\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <div className=\"authFormContainer\">\r\n        <FontAwesomeIcon\r\n          className=\"twitterIcon\"\r\n          icon={faTwitter}\r\n          color={\"#d9d9d9\"}\r\n          size=\"3x\"\r\n          style={{ marginLeft: 5 }}\r\n        />\r\n        <div className=\"loginText\">프위터 로그인</div>\r\n        <form onSubmit={onSubmit} className=\"authInputContainer\">\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n          />\r\n          <input type=\"submit\" value=\"로그인\" className=\"authSignIn\" />\r\n          {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <AuthForm />\r\n      <div className=\"socialContainer\">\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { authService, dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Pweet = ({ pweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false); // Pweet 수정 여부 확인 state\r\n  const [newPweet, setNewPweet] = useState(pweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this pweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`pweets/${pweetObj.id}`).delete();\r\n      await storageService.refFromURL(pweetObj.attachmentUrl).delete(); // 사진 삭제\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(pweetObj, newPweet);\r\n    await dbService.doc(`pweets/${pweetObj.id}`).update({\r\n      text: newPweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewPweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your pweet\"\r\n                  value={newPweet}\r\n                  required\r\n                  onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value=\"Update Pweet\" />\r\n              </form>\r\n              <button onClick={toggleEditing}>Cancel</button>{\" \"}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"pweetContainer\">\r\n          <img src={authService.currentUser.photoURL} />\r\n          <div className=\"pweetTextContainer\">\r\n            <div className=\"pweetCreatorContainer\">\r\n              <span>사용자</span>\r\n              <span className=\"pweetCreatorUid\">@{pweetObj.creatorId}</span>\r\n            </div>\r\n\r\n            <h4>{pweetObj.text}</h4>\r\n            {pweetObj.attachmentUrl && (\r\n              <img src={pweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n            )}\r\n            {isOwner && (\r\n              <div className=\"pweetButtonContainer\">\r\n                <label htmlFor=\"delete\">\r\n                  {<FontAwesomeIcon icon={faTrashAlt} />}\r\n                </label>\r\n                <button id=\"delete\" onClick={onDeleteClick}></button>\r\n                <label htmlFor=\"edit\">\r\n                  {<FontAwesomeIcon icon={faEdit} />}\r\n                </label>\r\n                <button id=\"edit\" onClick={toggleEditing}></button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { authService, dbService, storageService } from \"fbase\";\r\nimport \"./PweetFactory.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PweetFactory = ({ userObj }) => {\r\n  const [pweet, setPweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const pweetObj = {\r\n      text: pweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"pweets\").add(pweetObj);\r\n    setPweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0]; // 파일을 가져옴\r\n    const reader = new FileReader(); // FileReader를 만듦\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile); // 이미지 URL 획득\r\n  };\r\n  const onClearAttachment = () => setAttachment(null);\r\n  return (\r\n    <div className=\"pweetFactoryContainer\">\r\n      <div className=\"homeDiv\">홈</div>\r\n      <div className=\"mainContainer\">\r\n        <img src={authService.currentUser.photoURL} />\r\n        <form className=\"formContainer\" onSubmit={onSubmit}>\r\n          <div className=\"pweetInputContainer\">\r\n            <input\r\n              value={pweet}\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"무슨 일이 일어나고 있나요??\"\r\n              maxLength={120}\r\n              className=\"pweetText\"\r\n            />\r\n          </div>\r\n          <div className=\"inputContainer\">\r\n            <div className=\"addContainer\">\r\n              <label htmlFor=\"addImage\" className=\"addImage\">\r\n                <FontAwesomeIcon\r\n                  icon={faImage}\r\n                  style={{ width: 22.5, height: 22.5 }}\r\n                />\r\n              </label>\r\n              <input\r\n                id=\"addImage\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n              />\r\n            </div>\r\n\r\n            <input className=\"submitButton\" type=\"submit\" value=\"프윗하기\" />\r\n            {attachment && (\r\n              <div className=\"imgContainer\">\r\n                <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                <button onClick={onClearAttachment}>Clear</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PweetFactory;\r\n","import Pweet from \"components/Pweet\";\r\nimport PweetFactory from \"components/PweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [pweets, setPweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"pweets\").onSnapshot((snapshot) => {\r\n      // database에 변화가 있을 때, onSnapshot으로 snapshot 받아옴\r\n      const pweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      })); // 새로운 snapshot을 받았을 때, 새로운 배열을 만듦\r\n      setPweets(pweetArray); // pweets state에 새로운 배열 pweetArray를 넣음\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"homeContainer\">\r\n      <PweetFactory userObj={userObj} />\r\n      <div className=\"space\"></div>\r\n      <div>\r\n        {pweets.map((pweet) => (\r\n          <Pweet\r\n            key={pweet.id}\r\n            pweetObj={pweet}\r\n            isOwner={pweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"profileContainer\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav className=\"navContainer\">\r\n    <ul>\r\n      <li>\r\n        <FontAwesomeIcon icon={faTwitter} style={{ width: 30, height: 30 }} />\r\n      </li>\r\n      <li>\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon\r\n            icon={faHome}\r\n            style={{ width: 26.25, height: 26.25 }}\r\n          />\r\n          <span className=\"navText\">홈</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">\r\n          <FontAwesomeIcon\r\n            icon={faUser}\r\n            style={{ width: 26.25, height: 26.25 }}\r\n          />\r\n          <span className=\"navText\">프로필</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport \"./Router.css\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      <div className=\"routerContainer\">\r\n        {isLoggedIn ? (\r\n          <header className=\"item\">\r\n            <Navigation userObj={userObj} />\r\n          </header>\r\n        ) : (\r\n          <header></header>\r\n        )}\r\n        <Switch>\r\n          <main className=\"item\">\r\n            {isLoggedIn ? (\r\n              <>\r\n                <Route exact path=\"/\">\r\n                  <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Route exact path=\"/\">\r\n                  <Auth />\r\n                </Route>\r\n              </>\r\n            )}\r\n          </main>\r\n        </Switch>\r\n        {isLoggedIn ? <footer className=\"item\"></footer> : <footer></footer>}\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null); // 다른 곳에서 userObj를 원할 수도 있기 때문에 앱의 가장 위(상위)에 존재함.\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      // 로그인, 로그아웃, 앱 초기화 시에 발생\r\n      if (user) {\r\n        // 로그인 한 user가 존재 시(user가 존재할 경우)\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        }); // userObj에 user 입력\\\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true); // 앱이 준비가 되었을 때, init state를 true로 설정\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={userObj}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}